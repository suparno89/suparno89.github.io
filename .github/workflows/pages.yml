name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Show repo tree (before)
        run: |
          echo "== repo root =="
          ls -la
          echo "== client =="
          ls -la client || true

      - name: Install deps (client)
        working-directory: client
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build (client)
        working-directory: client
        run: |
          npm run build || (echo "Build failed" && exit 1)
          echo "== After build, list typical output dirs relative to client =="
          for d in dist dist/public ../dist ../dist/public; do
            echo "-> $d"
            [ -d "$d" ] && ls -la "$d" || echo "(missing)"
          done

      - name: Locate output dir (auto-detect)
        id: outdir
        working-directory: client
        shell: bash
        run: |
          # Try common candidates relative to 'client'
          CANDIDATES=( "dist/public" "dist" "../dist/public" "../dist" )
          FOUND=""
          for d in "${CANDIDATES[@]}"; do
            if [ -f "$d/index.html" ]; then
              FOUND="$d"
              break
            fi
          done
          if [ -z "$FOUND" ]; then
            echo "No index.html found in: ${CANDIDATES[*]}"
            exit 1
          fi
          # Normalize to a path from repo root:
          if [[ "$FOUND" == ../* ]]; then
            # path already points outside client â†’ strip leading ../
            echo "path=${FOUND#../}" >> "$GITHUB_OUTPUT"
          else
            echo "path=client/$FOUND" >> "$GITHUB_OUTPUT"
          fi
          echo "Using output path: $(cat $GITHUB_OUTPUT)"

      - name: SPA fallback & .nojekyll
        working-directory: ${{ steps.outdir.outputs.path }}
        run: |
          cp -f index.html 404.html
          touch .nojekyll
          echo "Prepared SPA fallback and disabled Jekyll."

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.outdir.outputs.path }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
